[tool.poetry]
name = "retriever"
version = "0.1.0"
description = ""
authors = ["aibakeneko <aibakeneko@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.1.3"
loguru = "^0.7.2"
openpyxl = "^3.1.2"
typer = "^0.15.1"
roman = "^4.1"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^24.1.1"
pylint = "^3.0.2"
mypy = "^1.7.1"
pytest = "^8.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = 'tests.*'
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "roman.*"
ignore_missing_imports = true

[tool.isort]
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = [ "proceedings_ml", "tests" ]

[tool.pylint.main]
exit-zero = true
ignore-paths = "deprecated"
jobs = 0
persistent = true
py-version = "3.11"
suggestion-mode = true

[tool.pylint.design]
max-args = 8
max-attributes = 14

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.BaseException", "builtins.Exception"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = 120

[tool.pylint.logging]
logging-format-style = "old"

[tool.pylint."messages control"]
extension-pkg-whitelist = "pydantic"
disable = [
    "duplicate-code",
    "invalid-name",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "pointless-string-statement",
    "global-statement",
    "c-extension-no-member",
    "too-few-public-methods",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "consider-using-enumerate",
    "unnecessary-comprehension",
    "too-many-branches",
    "too-many-locals",
    "wrong-import-order",
    "wrong-spelling-in-comment",
    "wrong-spelling-in-docstring"
]

[tool.pylint.miscellaneous]
notes = ""

[tool.pylint.refactoring]
never-returning-functions = ["sys.exit", "argparse.parse_error"]

[tool.pylint.reports]
output-format = "colorized"
score = false

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:\nPyarrow:DeprecationWarning'
]